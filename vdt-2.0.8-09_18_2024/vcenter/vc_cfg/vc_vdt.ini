[vdt]
version = 2.0.8
title = "VDT for vCenter (v${version})"

[options]
timeout = 10

[logging]
level = DEBUG
logdir = /var/log/vmware/vdt
logname = vdt.log

[paths]
root_path =
scripts_path = ${root_path}/vc_scripts

[category:appliance_info]
name = "Appliance Info and Config"

[category:vc_ntp_checks]
name = "NTP Checks"

[category:vc_dns_checks]
name = "DNS Checks"

[category:vc_filesystem_checks]
name = "File System Checks"

[category:vc_corefile_checks]
name = Core File Check

[category:vc_service_checks]
name = "Service Status Check"

[category:vc_syslog_checks]
name = Syslog Check

[category:vc_db_checks]
name = Postgres Checks

[category:vc_cert_info]
name = "vCenter Certificates"

[category:vc_sso_checks]
name = "SSO Checks"

[category:vc_idsource_checks]
name = Identity Source Checks

[category:vc_iwa_checks]
name = "IWA/AD Checks"

[category:vc_vmdir_checks]
name = "VMdir Checks"

[category:vc_cluster_checks]
name = "Host Cluster Checks"

[category:vc_vcha_checks]
name = "VCHA Checks"

[subcategory:vc_ns_checks]
name = "Nameserver Checks"
parent_cat = "vc_dns_checks"

[subcategory:vc_vmdir_local_checks]
name = "Local VMdir Checks"
parent_cat = "vc_vmdir_checks"

[subcategory:vc_vmdir_repl_checks]
name = "VMdir Replication Checks"
parent_cat = "vc_vmdir_checks"

[subcategory:vc_iwa_domain_checks]
name = "Detected Domain Checks"
parent_cat = "vc_iwa_checks"

[subcategory:vc_iwa_other_checks]
name = "Other Domain Checks"
parent_cat = "vc_iwa_checks"

[subcategory:vc_sso_ls_checks]
name = "VC Lookup Service Check"
parent_cat = "vc_sso_checks"

[subcategory:vc_sso_mid_checks]
name = "VC Machine ID Check"
parent_cat = "vc_sso_checks"

[subcategory:vc_cert_vecs_checks]
name = "VC VECS Check"
parent_cat = "vc_cert_info"

[subcategory:vc_cert_root_checks]
name = "VC Root CA Check"
parent_cat = "vc_cert_info"

[subcategory:vc_cert_crls_checks]
name = "VC CRLs Check"
parent_cat = "vc_cert_info"

[subcategory:vc_cert_mode_checks]
name = "ESXi Certificate Mode Check"
parent_cat = "vc_cert_info"

[subcategory:vc_cert_extension_checks]
name = "VC Extensions Check"
parent_cat = "vc_cert_info"

[subcategory:vc_cert_sts_checks]
name = "VC STS Certificate Check"
parent_cat = "vc_cert_info"

[subcategory:vc_cert_parity_checks]
name = "Solution User Cert Parity Checks"
parent_cat = "vc_cert_info"

[check:vc_cert_vecs_check]
product = "vcenter"
parent_cat = "vc_cert_vecs_checks"
main_script = ${paths:scripts_path}/vc_cert_check.py
main_func = "vecs_check"
timeout = 10
name = "VC VECS Check"
req_services = "vmafdd"

[check:vc_cert_soluser_check]
product = "vcenter"
parent_cat = "vc_cert_parity_checks"
main_script = ${paths:scripts_path}/vc_soluser_checks.py
main_func = "sol_user_check"
name = "Solution User Cert Parity Checks"
auth_req = True
req_services = ['vmafdd', 'vmdird']

[check:vc_cert_root_check]
product = "vcenter"
parent_cat = "vc_cert_root_checks"
main_script = ${paths:scripts_path}/vc_cert_check.py
main_func = "root_check"
timeout = 10
name = "VC Certificate Authority Check"
req_services = "vmafdd"

[check:vc_cert_sts_check]
product = "vcenter"
parent_cat = "vc_cert_sts_checks"
main_script = ${paths:scripts_path}/vc_cert_check.py
main_func = "sts_check"
timeout = 10
name = "VC STS Certificate Check"
req_services = ['vmafdd', 'vmdird', 'vmware-stsd']

[check:vc_cert_crls_check]
product = "vcenter"
parent_cat = "vc_cert_crls_checks"
main_script = ${paths:scripts_path}/vc_cert_check.py
main_func = "crls_check"
timeout = 10
name = "VC CRLS Check"
req_services = "vmafdd"

[check:vc_cert_ext_check]
product = "vcenter"
parent_cat = "vc_cert_extension_checks"
main_script = ${paths:scripts_path}/vc_cert_check.py
main_func = "extension_check"
auth_req = True
timeout = 10
name = "VC Extensions Check"
req_services = ['vmafdd', 'vmdird']

[check:vc_cert_mode_check]
product = "vcenter"
parent_cat = "vc_cert_mode_checks"
main_script = ${paths:scripts_path}/vc_cert_check.py
main_func = "esxi_cert_mode_check"
auth_req = True
timeout = 10
name = "ESXi Certificate Mode Check"
req_services = "vmafdd"

[check:vc_info]
product = "vcenter"
parent_cat = "appliance_info"
main_script = ${paths:scripts_path}/vc_info.py
main_func = "main"
auth_req = False
name = "General Info"

[check:vc_inv_summary]
product = "vcenter"
parent_cat = "appliance_info"
main_script = ${paths:scripts_path}/vc_info.py
main_func = "get_inventory_summary"
auth_req = False
name = "Inventory Summary"
req_services = "vmware-vpostgres"

[check:pnid_check]
product = "vcenter"
parent_cat = "appliance_info"
main_script = ${paths:scripts_path}/pnid_check.py
main_func = "main"
name = "PNID Check"
timeout = 10
req_services = "vmafdd"

[check:proxy_check]
product = "vcenter"
parent_cat = "appliance_info"
main_script = ${paths:scripts_path}/vc_info.py
main_func = "proxy_check"
name = "Proxy Check"

[check:ntp_check]
product = "vcenter"
parent_cat = "vc_ntp_checks"
main_script = ${paths:scripts_path}/vc_ntp.py
main_func = "main"
name = "NTP Check"

[check:root_check]
product = "vcenter"
parent_cat = "appliance_info"
main_script = ${paths:scripts_path}/vc_root_check.py
main_func = "main"
auth_req = False
timeout = 10
name = "Root Account Check"

[check:dns_check]
product = "vcenter"
parent_cat = "vc_dns_checks"
main_script = ${paths:scripts_path}/vc_dns.py
main_func = "main"
name = "DNS Check"

[check:ns_check]
product = "vcenter"
parent_cat = "vc_ns_checks"
main_script = ${paths:scripts_path}/vc_dns.py
main_func = "execute_nsq"
name = "NS Check"

[check:ls_check]
product = "vcenter"
parent_cat = "vc_sso_ls_checks"
main_script = ${paths:scripts_path}/lsreport.py
main_func = "run_lscheck"
name = "Lookupservice Check"
req_services = ['vmafdd', 'vmdird', 'vmware-stsd']

[check:mid_check]
product = "vcenter"
parent_cat = "vc_sso_mid_checks"
main_script = ${paths:scripts_path}/lsreport.py
main_func = "run_machine_id_check"
name = "Machine ID Check"
req_services = 'vmafdd'

[check:domain_check]
product = "vcenter"
parent_cat = "vc_iwa_domain_checks"
main_script = ${paths:scripts_path}/vc_ad_check.py
main_func = "run_domain_checks"
name = "IWA/AD Check"
req_services = 'lwsmd'

[check:registry_check]
product = "vcenter"
parent_cat = "vc_iwa_other_checks"
main_script = ${paths:scripts_path}/vc_ad_check.py
main_func = "run_registry_checks"
name = "IWA/AD Check"
req_services = 'lwsmd'

[check:vmdir_info_check]
product = "vcenter"
parent_cat = "vc_vmdir_local_checks"
main_script = ${paths:scripts_path}/vc_vmdir_check.py
main_func = "run_vmdir_info"
name = "VMdir Info"

[check:vmdir_argument_check]
product = "vcenter"
parent_cat = "vc_vmdir_local_checks"
main_script = ${paths:scripts_path}/vc_vmdir_check.py
main_func = "run_argument_check"
name = "VMdir Start Arguments"
req_services = 'vmafdd'

[check:vmdir_nativeha_check]
product = "vcenter"
parent_cat = "vc_vmdir_local_checks"
main_script = ${paths:scripts_path}/vc_vmdir_check.py
main_func = "run_nativeha_check"
name = "VMdir Native HA Check"
req_services = 'vmafdd'

[check:vmdir_dfl_check]
product = "vcenter"
parent_cat = "vc_vmdir_local_checks"
main_script = ${paths:scripts_path}/vc_vmdir_check.py
main_func = "run_dfl_check"
name = "VMdir DFL Check"
req_services = 'vmdird'
auth_req = True

[check:vmdir_state_check]
product = "vcenter"
parent_cat = "vc_vmdir_local_checks"
main_script = ${paths:scripts_path}/vc_vmdir_check.py
main_func = "run_vmdir_state_check"
name = "VMdir State Check"
req_services = 'vmdird'
auth_req = True

[check:vmdir_partner_check]
product = "vcenter"
parent_cat = "vc_vmdir_repl_checks"
main_script = ${paths:scripts_path}/vc_vmdir_check.py
main_func = "run_partner_check"
name = "VMdir Partner Check"
req_services = 'vmdird'
auth_req = True

[check:vcha_check]
product = "vcenter"
parent_cat = "vc_vcha_checks"
main_script = ${paths:scripts_path}/vc_vcha_check.py
main_func = "vcha_check"
name = "VCHA Check"
req_services = 'vmware-vcha'
auth_req = True

[check:service_check]
product = "vcenter"
parent_cat = "vc_service_checks"
main_script = ${paths:scripts_path}/vc_services.py
main_func = "run_services_check"
name = "Service Status Check"

[check:service_priority_check]
product = "vcenter"
parent_cat = "vc_service_checks"
main_script = ${paths:scripts_path}/vc_services.py
main_func = "check_start_priority"
name = "Service Priority Check"

[check:syslog_check]
product = "vcenter"
parent_cat = "vc_syslog_checks"
main_script = ${paths:scripts_path}/vc_syslog_check.py
main_func = "main"
name = "Remote Syslog Check"


[check:diskspace_check]
product = "vcenter"
parent_cat = "vc_filesystem_checks"
main_script = ${paths:scripts_path}/vc_disk_space.py
main_func = "run_diskspace_check"
name = "Disk Space Check"

[check:inode_check]
product = "vcenter"
parent_cat = "vc_filesystem_checks"
main_script = ${paths:scripts_path}/vc_disk_space.py
main_func = "run_inode_check"
name = "Inode Check"

[check:vmafd_log_check]
product = "vcenter"
parent_cat = "vc_filesystem_checks"
main_script = ${paths:scripts_path}/vc_disk_space.py
main_func = "run_vmafd_log_check"
name = "VMAFDD Log Rotation"

[check:corefile_check]
product = "vcenter"
parent_cat = "vc_corefile_checks"
main_script = ${paths:scripts_path}/vc_corefile_check.py
main_func = "checkCores"
name = "Core File Check"

[check:hprof_check]
product = "vcenter"
parent_cat = "vc_corefile_checks"
main_script = ${paths:scripts_path}/vc_corefile_check.py
main_func = "findHprofs"
name = "Core File Check"

[check:vc_db_check]
product = "vcenter"
parent_cat = "vc_db_checks"
main_script = ${paths:scripts_path}/vc_db_check.py
main_func = "main"
name = "vCenter PostgresDB Check"
req_services = "vmware-vpostgres"

[check:vc_idsource_check]
product = "vcenter"
parent_cat = "vc_idsource_checks"
main_script = ${paths:scripts_path}/vc_identitysource_check.py
main_func = "main"
name = "Identity Source Check"
auth_req = True
req_services = "vmdird"

[check:vc_idsource_check2]
product = "vcenter"
parent_cat = "vc_idsource_checks"
main_script = ${paths:scripts_path}/vc_identitysource_check.py
main_func = "connection_string_check"
name = "Identity Source Check"
auth_req = True
req_services = "vmdird"

[check:vc_cluster_ssloptions_check]
product = "vcenter"
parent_cat = "vc_cluster_checks"
main_script = ${paths:scripts_path}/vc_cluster_check.py
main_func = "check_legacy_ssl_options"
timeout = 10
name = "ESXi Cluster Stale sslOptions Check"
auth_req = True
req_services = "vmware-vpxd"
